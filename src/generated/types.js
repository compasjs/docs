// Generated by @compas/code-gen
/* eslint-disable no-unused-vars */

// An export soo all things work correctly with linters, ts, ...
export const __generated__ = true;
/**
 * @typedef {import("@compas/code-gen").App} App
 */
/**
 * @typedef {import("@compas/code-gen").TypeCreator} TypeCreator
 */
/**
 * @typedef {import("@compas/code-gen").RouteCreator} RouteCreator
 */
/**
 * @typedef {{"filePath": string, "contentPath": string, "metadata"?: {"type": "blog"|"page", "title": string, "date"?: Date, "description": string, "order": number, "tags": (string)[], }, "htmlContent"?: string, }} ContentItem
 */
/**
 * @typedef {DocParserUnknownBlock|DocParserFunctionDeclarationBlock} DocParserBlock
 */
/**
 * @typedef {{"type": "unknown", "raw": string, "range": DocParserRange, }} DocParserUnknownBlock
 */
/**
 * @typedef {{"start": number, "end": number, "pkg": DocParserPackage, "file": string, "line"?: string, }} DocParserRange
 */
/**
 * @typedef {"insight"|"stdlib"} DocParserPackage
 */
/**
 * @typedef {{"type": "functionDeclaration", "name"?: string, "summary"?: string, "description"?: string, "availableSince"?: string, "isVariable": boolean, "parsedType": DocParserFunctionType, "range": DocParserRange, }} DocParserFunctionDeclarationBlock
 */
/**
 * @typedef {{"type": "function", "params": ({"name": string, "description": string, "type": DocParserType, })[], "returnType": DocParserType, }} DocParserFunctionType
 */
/**
 * @typedef {DocParserLiteralType|DocParserFunctionType} DocParserType
 */
/**
 * @typedef {{"type": "literal", "value": string, "isOptional"?: boolean, "defaultValue"?: string, "isDocBlockReference"?: boolean, }} DocParserLiteralType
 */
/**
 * @typedef {{"type": "MultiLine"|"SingleLine", "value": string, "range": DocParserRange, }} DocParserJSComment
 */
